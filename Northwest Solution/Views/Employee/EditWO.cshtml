
@{
    Layout = "~/Views/Shared/EmpLayout.cshtml";
    ViewBag.Title = "EditWO";
}

<h2>Edit Work Over</h2>

<div class="row">
    <div class="col-md-8">
        <h4>Order Number: 243556</h4>
        <br />
        <h4>Assay Name: CustomScreen</h4>
        <br /><br />
        <div class="container">
            <table class="table">
                <tr>
                    <th>
                        <p>Test Number</p>
                    </th>
                    <th>
                        <p>Scheduled Date</p>
                    </th>
                    <th>
                        <p>Status</p>
                    </th>
                    <th>
                        <p>Pre-Requisites</p>
                    </th>
                    <th>
                        <p>Price</p>
                    </th>
                    <th>
                    </th>
                </tr>
                <tr>
                    <td>
                        <p>247</p>
                    </td>
                    <td>
                        <p>12/12/2017</p>
                    </td>
                    <td>
                        <p>In Progress</p>
                    </td>
                    <td>
                        <p>None</p>
                    </td>
                    <td>
                        <p>$100.00</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>137</p>
                    </td>
                    <td>
                        <p>12/15/2017</p>
                    </td>
                    <td>
                        <p>In Progress</p>
                    </td>
                    <td>
                        <p>313</p>
                    </td>
                    <td>
                        <p>$100.00</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>256</p>
                    </td>
                    <td>
                        <p><input type="date" id="date" required placeholder="12/6/2017" /></p>
                    </td>
                    <td>
                        <p>Awaiting Approval</p>
                    </td>
                    <td>
                        <p>247</p>
                    </td>
                    <td>
                        <p>$100.00</p>
                    </td>
                </tr>
            </table>
            <a href="#hidden1" data-toggle="collapse" class="btn btn-primary btn-md">Add New Assay/Test</a>
        </div>
    </div>
    <div class="col-md-4 collapse" id="hidden1">
        <br /><br /><br />
        <h4>Add a New Assay/Test</h4>
        <br />
        <p>Assay: @Html.DropDownList("assay")</p>
        <p>Test: @Html.DropDownList("tests")</p>
        <p>Recommendation Reasoning</p>
        <textarea name="Text1" cols="40" rows="5"></textarea>
        <br /><br />
        @Html.ActionLink("Submit", "Tab", null, null, new { @class = "btn btn-primary btn-md"})
    </div>
</div>

<!-- Bootstrap core CSS -->

<link href="~/gentelella/production/css/bootstrap.min.css" rel="stylesheet">

<link href="~/gentelella/production/fonts/css/font-awesome.min.css" rel="stylesheet">
<link href="~/gentelella/production/css/animate.min.css" rel="stylesheet">

<!-- Custom styling plus plugins -->
<link href="~/Content/custom2.css" rel="stylesheet">
<link href="~/gentelella/production/css/icheck/flat/green.css" rel="stylesheet">
<!-- ion_range -->
<link rel="stylesheet" href="~/gentelella/production/css/normalize.css" />
<link rel="stylesheet" href="~/gentelella/production/css/ion.rangeSlider.css" />
<link rel="stylesheet" href="~/gentelella/production/css/ion.rangeSlider.skinFlat.css" />

<!-- colorpicker -->
<link href="~/gentelella/production/css/colorpicker/bootstrap-colorpicker.min.css" rel="stylesheet">

<script src="~/gentelella/production/js/jquery.min.js"></script>

  <!-- bootstrap progress js -->
<script src="~/gentelella/production/js/progressbar/bootstrap-progressbar.min.js"></script>
<script src="~/gentelella/production/js/nicescroll/jquery.nicescroll.min.js"></script>
<!-- icheck -->
<script src="~/gentelella/production/js/icheck/icheck.min.js"></script>
<!-- daterangepicker -->
<script type="text/javascript" src="~/gentelella/production/js/moment/moment.min.js"></script>
<script type="text/javascript" src="~/gentelella/production/js/datepicker/daterangepicker.js"></script>
<!-- input mask -->
<script src="~/gentelella/production/js/input_mask/jquery.inputmask.js"></script>
<!-- knob -->
<script src="~/gentelella/production/js/knob/jquery.knob.min.js"></script>
<!-- range slider -->
<script src="~/gentelella/production/js/ion_range/ion.rangeSlider.min.js"></script>
<!-- color picker -->
<script src="~/gentelella/production/js/colorpicker/bootstrap-colorpicker.min.js"></script>
<script src="~/gentelella/production/js/colorpicker/docs.js"></script>

<!-- image cropping -->
<script src="~/gentelella/production/js/cropping/cropper.min.js"></script>
<script src="~/gentelella/production/js/cropping/main2.js"></script>
<!-- pace -->
<script src="~/gentelella/production/js/pace/pace.min.js"></script>

<!-- datepicker -->
<script type="text/javascript">
    $(document).ready(function () {

        var cb = function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
            $('#reportrange_right span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            //alert("Callback has fired: [" + start.format('MMMM D, YYYY') + " to " + end.format('MMMM D, YYYY') + ", label = " + label + "]");
        }

        var optionSet1 = {
            startDate: moment().subtract(29, 'days'),
            endDate: moment(),
            minDate: '01/01/2012',
            maxDate: '12/31/2015',
            dateLimit: {
                days: 60
            },
            showDropdowns: true,
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
            opens: 'right',
            buttonClasses: ['btn btn-default'],
            applyClass: 'btn-small btn-primary',
            cancelClass: 'btn-small',
            format: 'MM/DD/YYYY',
            separator: ' to ',
            locale: {
                applyLabel: 'Submit',
                cancelLabel: 'Clear',
                fromLabel: 'From',
                toLabel: 'To',
                customRangeLabel: 'Custom',
                daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                firstDay: 1
            }
        };

        $('#reportrange_right span').html(moment().subtract(29, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));

        $('#reportrange_right').daterangepicker(optionSet1, cb);

        $('#reportrange_right').on('show.daterangepicker', function () {
            console.log("show event fired");
        });
        $('#reportrange_right').on('hide.daterangepicker', function () {
            console.log("hide event fired");
        });
        $('#reportrange_right').on('apply.daterangepicker', function (ev, picker) {
            console.log("apply event fired, start/end dates are " + picker.startDate.format('MMMM D, YYYY') + " to " + picker.endDate.format('MMMM D, YYYY'));
        });
        $('#reportrange_right').on('cancel.daterangepicker', function (ev, picker) {
            console.log("cancel event fired");
        });

        $('#options1').click(function () {
            $('#reportrange_right').data('daterangepicker').setOptions(optionSet1, cb);
        });

        $('#options2').click(function () {
            $('#reportrange_right').data('daterangepicker').setOptions(optionSet2, cb);
        });

        $('#destroy').click(function () {
            $('#reportrange_right').data('daterangepicker').remove();
        });

    });
</script>
<!-- datepicker -->
<script type="text/javascript">
    $(document).ready(function () {

        var cb = function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            //alert("Callback has fired: [" + start.format('MMMM D, YYYY') + " to " + end.format('MMMM D, YYYY') + ", label = " + label + "]");
        }

        var optionSet1 = {
            startDate: moment().subtract(29, 'days'),
            endDate: moment(),
            minDate: '01/01/2012',
            maxDate: '12/31/2015',
            dateLimit: {
                days: 60
            },
            showDropdowns: true,
            showWeekNumbers: true,
            timePicker: false,
            timePickerIncrement: 1,
            timePicker12Hour: true,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
            opens: 'left',
            buttonClasses: ['btn btn-default'],
            applyClass: 'btn-small btn-primary',
            cancelClass: 'btn-small',
            format: 'MM/DD/YYYY',
            separator: ' to ',
            locale: {
                applyLabel: 'Submit',
                cancelLabel: 'Clear',
                fromLabel: 'From',
                toLabel: 'To',
                customRangeLabel: 'Custom',
                daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                firstDay: 1
            }
        };
        $('#reportrange span').html(moment().subtract(29, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));
        $('#reportrange').daterangepicker(optionSet1, cb);
        $('#reportrange').on('show.daterangepicker', function () {
            console.log("show event fired");
        });
        $('#reportrange').on('hide.daterangepicker', function () {
            console.log("hide event fired");
        });
        $('#reportrange').on('apply.daterangepicker', function (ev, picker) {
            console.log("apply event fired, start/end dates are " + picker.startDate.format('MMMM D, YYYY') + " to " + picker.endDate.format('MMMM D, YYYY'));
        });
        $('#reportrange').on('cancel.daterangepicker', function (ev, picker) {
            console.log("cancel event fired");
        });
        $('#options1').click(function () {
            $('#reportrange').data('daterangepicker').setOptions(optionSet1, cb);
        });
        $('#options2').click(function () {
            $('#reportrange').data('daterangepicker').setOptions(optionSet2, cb);
        });
        $('#destroy').click(function () {
            $('#reportrange').data('daterangepicker').remove();
        });
    });
</script>
<!-- /datepicker -->
<script type="text/javascript">
    $(document).ready(function () {
        $('#single_cal1').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_1"
        }, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
        $('#single_cal2').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_2"
        }, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
        $('#single_cal3').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_3"
        }, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
        $('#single_cal4').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_4"
        }, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#reservation').daterangepicker(null, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
    });
</script>
<!-- /datepicker -->

<!-- input_mask -->
<script>
    $(document).ready(function () {
        $(":input").inputmask();
    });
</script>
<!-- /input mask -->
<!-- ion_range -->
<script>
    $(function () {
        $("#range_27").ionRangeSlider({
            type: "double",
            min: 1000000,
            max: 2000000,
            grid: true,
            force_edges: true
        });
        $("#range").ionRangeSlider({
            hide_min_max: true,
            keyboard: true,
            min: 0,
            max: 5000,
            from: 1000,
            to: 4000,
            type: 'double',
            step: 1,
            prefix: "$",
            grid: true
        });
        $("#range_25").ionRangeSlider({
            type: "double",
            min: 1000000,
            max: 2000000,
            grid: true
        });
        $("#range_26").ionRangeSlider({
            type: "double",
            min: 0,
            max: 10000,
            step: 500,
            grid: true,
            grid_snap: true
        });
        $("#range_31").ionRangeSlider({
            type: "double",
            min: 0,
            max: 100,
            from: 30,
            to: 70,
            from_fixed: true
        });
        $(".range_min_max").ionRangeSlider({
            type: "double",
            min: 0,
            max: 100,
            from: 30,
            to: 70,
            max_interval: 50
        });
        $(".range_time24").ionRangeSlider({
            min: +moment().subtract(12, "hours").format("X"),
            max: +moment().format("X"),
            from: +moment().subtract(6, "hours").format("X"),
            grid: true,
            force_edges: true,
            prettify: function (num) {
                var m = moment(num, "X");
                return m.format("Do MMMM, HH:mm");
            }
        });
    });
</script>
<!-- /ion_range -->
<!-- knob -->
<script>
    $(function ($) {

        $(".knob").knob({
            change: function (value) {
                //console.log("change : " + value);
            },
            release: function (value) {
                //console.log(this.$.attr('value'));
                console.log("release : " + value);
            },
            cancel: function () {
                console.log("cancel : ", this);
            },
            /*format : function (value) {
             return value + '%';
             },*/
            draw: function () {

                // "tron" case
                if (this.$.data('skin') == 'tron') {

                    this.cursorExt = 0.3;

                    var a = this.arc(this.cv) // Arc
                        ,
                        pa // Previous arc
                        , r = 1;

                    this.g.lineWidth = this.lineWidth;

                    if (this.o.displayPrevious) {
                        pa = this.arc(this.v);
                        this.g.beginPath();
                        this.g.strokeStyle = this.pColor;
                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, pa.s, pa.e, pa.d);
                        this.g.stroke();
                    }

                    this.g.beginPath();
                    this.g.strokeStyle = r ? this.o.fgColor : this.fgColor;
                    this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a.s, a.e, a.d);
                    this.g.stroke();

                    this.g.lineWidth = 2;
                    this.g.beginPath();
                    this.g.strokeStyle = this.o.fgColor;
                    this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
                    this.g.stroke();

                    return false;
                }
            }
        });

        // Example of infinite knob, iPod click wheel
        var v, up = 0,
            down = 0,
            i = 0,
            $idir = $("div.idir"),
            $ival = $("div.ival"),
            incr = function () {
                i++;
                $idir.show().html("+").fadeOut();
                $ival.html(i);
            },
            decr = function () {
                i--;
                $idir.show().html("-").fadeOut();
                $ival.html(i);
            };
        $("input.infinite").knob({
            min: 0,
            max: 20,
            stopper: false,
            change: function () {
                if (v > this.cv) {
                    if (up) {
                        decr();
                        up = 0;
                    } else {
                        up = 1;
                        down = 0;
                    }
                } else {
                    if (v < this.cv) {
                        if (down) {
                            incr();
                            down = 0;
                        } else {
                            down = 1;
                            up = 0;
                        }
                    }
                }
                v = this.cv;
            }
        });
    });
</script>
<!-- /knob -->